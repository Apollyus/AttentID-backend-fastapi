version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: raspberry_pi_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-raspberry_pi_data}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - raspberry_pi_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: raspberry_pi_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - raspberry_pi_network
    restart: unless-stopped
    depends_on:
      - postgres

  mqtt-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: raspberry_pi_mqtt_api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-raspberry_pi_data}
      - MQTT_BROKER_HOST=${MQTT_BROKER_HOST:-localhost}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT:-1883}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID:-raspberry_pi_server}
      - MQTT_TOPIC=${MQTT_TOPIC:-raspberry/+/data}
    volumes:
      - type: bind
        source: ./app
        target: /code_root/app
    ports:
      - "8000:8000"
    networks:
      - raspberry_pi_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

networks:
  raspberry_pi_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: